====
Payu
====

:author: Marshall Ward
:description: A Payu training course
:date: 3 October 2018


What is Payu?
=============

Etymology
---------

* *P*\ ython on v\ *AYU*

  Vayu was Raijin's predecessor and has passed away...

  ...but Payu lives on!


Motivation
----------

Long ago, we managed many, many jobscripts.

Many kinds of scripts:
   bash, tcsh, ksh, ...

Many different models:
   MOM, MITgcm, Q-GCM, ACCESS, ...

Juggling and sharing scripts was becoming a problem!


----

.. image:: img/andy_at_nci.png

"Why not just do everything in Python?"


Prehistoric Payu
----------------

.. code:: python

   from payu import gold

   def main():
       expt = gold(forcing='andrew')

       expt.setup()
       expt.run()
       expt.archive()
       if expt.counter < expt.max_counter:
           expt.resubmit()

   if __name__ == '__main__':
       main()


.. remove me

   Setting up
   ==========

   This will initialise your "laboratory"


   Your laboratory
   ===============

   Initialise your "laboratory"::

      payu init -m mom

   What's to be inside?

   * Lab path
   * Archive
   * bin, etc

   (Check: Do we automatically create this?)


Using Payu
==========

Using an experiment
-------------------

Clone an existing experiment (usually in ``$HOME``):

.. code:: sh

   cd $HOME
   mkdir -p mom
   cd mom
   git clone /short/public/mxw900/payucourse/expt/bowl1

This is the "*control directory*" for ``bowl1``


Run the experiment
------------------

This job is pre-configured, run it!

.. code:: sh

   cd bowl1
   payu run

* Model will run in ``work/``

* Output saved to saved to ``archive/``


Your experiment
---------------

Your Payu configuration file:

* ``config.yaml``

Your model (MOM) configuration files:

* ``input.nml``

* ``diag_table``

* ``data_table``

* ``field_table``


Experiment Configuration
------------------------

.. code:: yaml

   # PBS
   queue: express
   ncpus: 4
   walltime: 0:10:00
   mem: 1GB
   jobname: bowl1

   # Model
   model: mom
   input: /short/public/mxw900/payucourse/input/bowl1
   exe: /short/public/mxw900/payucourse/bin/mom51_solo_default
   collate: False


Inspecting the output
---------------------

Model stdout, stderr
   ``mom.out``, ``mom.err``

Scheduler logs
   ``bowl1.o####``, ``bowl1.e####``

Model output in ``archive/``
   ``output000``, ``restart000``

.. Every 5th restart is saved, and any inbetween


Cleaning up
-----------

To clear ``work/`` and save PBS logs::

   payu sweep

The completely delete the experiment::

   payu sweep --hard

This wipes output, restarts, and logs! (``archive/$expt``)


Anatomy of an Experiment
========================

Control vs Laboratory
---------------------

Control path: ``${HOME}/mom/bowl1``
   User-configured (text) input

Laboratory: ``/short/$PROJECT/$USER/$MODEL/``
   Executables, data input, output, etc.

You "control" the laboratory externally


Laboratory overview
-------------------

============   ===============================
``archive``    Experiment output and restarts
``bin``        Model executables
``codebase``   Model Source code repository
``input``      Static input files
``work``       Ongoing (or failed) experiments
============   ===============================


Feature overview
================

Multiple runs
-------------

.. code::

   payu run -n 5


Experiment tracking
-------------------

TODO: Change something, run, and then ``git log``.


GitHub integration
------------------

Sync your experiment on GitHub

.. code:: sh

   payu ghsetup
   payu push

(Warning: Probably going to rename ``push``...)


Supported models
----------------

To see the supported models::

   payu list

Although support can't always be guaranteed...


Coupled Models
==============

ACCESS-OM2
----------

TODO
